{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,0BAIA,MAGMC,EAAO,CACXC,KAAMC,SAASC,cAAc,gBAC7BC,QAASF,SAASC,cAAc,YAChCE,MAAOH,SAASC,cAAc,cAGhCH,EAAKC,KAAKK,iBAAiB,UAQ3B,SAAkBC,GAChBA,EAAEC,iBACFC,EAAoB,EACpBC,EAAU,EACVV,EAAKI,QAAQO,UAAY,GACzBC,EAAcL,EAAEM,cAAcC,SAASC,YAAYC,MAAMC,OACzDC,EAAON,E,IAbTZ,EAAKI,QAAQE,iBAAiB,SA2H9B,SAAoBC,GAClBA,EAAEC,iBACED,EAAEY,OAAOC,UAAUC,SAAS,kBAC9BC,EAAWC,GAAG,uB,IA5HlB,IAAIb,EAAU,EACVc,EAAmB,GACnBZ,EAAc,GACdH,EAAoB,EAWxB,MAKMgB,EAAW,IAAIC,sBAErB,SAAsBC,GACpBA,EAAQC,SAAQC,IACVA,EAAMC,kBAUd,WAGE,GAFApB,GAAW,EACXc,GAAoB,GAChBA,EAAmB,IAIrB,YAHAO,EAAAC,OAAOC,QACL,8DAKJf,EAAON,E,CAnBHsB,GAEIV,EAAmB,KACrBC,EAASU,UAAUN,EAAMV,Q,MAbX,CACpBiB,KAAM,KACNC,WAAY,QACZC,UAAW,IA6BbC,eAAerB,EAAOsB,GACpB,IACE,MAAMC,QAAa3C,EAAA4C,QAAMC,IACvB,6HAA0BH,sBAA0B9B,KAEtD,GAAoB,MAAhB+B,EAAKG,OACP,MAAM,IAAIC,MAAMJ,EAAKG,QAEvB,GAA8B,IAA1BH,EAAKA,KAAKK,KAAKC,OAEjB,YADAhB,EAAAC,OAAOC,QAAQ,sCAuBrB,SAAuBe,GACrB,MAAMC,EAASD,EAAQP,KAAKK,KACzBI,KACC,EAACC,aACCA,EAAYC,cACZA,EAAaC,KACbA,EAAIC,MACJA,EAAKC,MACLA,EAAKC,SACLA,EAAQC,UACRA,GACE,KACK,+DACqBL,4DACkBD,WAAsBE,2GAGjCC,mDACAC,sDACGC,uDACCC,0CAK1CC,KAAK,IACR1D,EAAKI,QAAQuD,mBAAmB,YAAaV,GAC7CxB,EAASmC,QAAQ5D,EAAKK,OACtBiB,EAAa,IAAIuC,EAAAC,GAAJ,CACX,iCACAC,GAGF,MAAQC,OAAQC,GACdjE,EAAKI,QAAQ8D,kBAAkBC,wBAC5B1D,GACH2D,OAAOC,SAAS,CACdC,IAAkB,EAAbL,EACLM,SAAU,U,CAzDZC,CAAc/B,GACVhC,IACFsB,EAAAC,OAAOyC,QAAQ,oBAAoBhC,EAAKA,KAAKiC,qBAC7CjE,GAAqB,E,CAEvB,MAAOkE,GACPC,QAAQC,IAAIF,EAAMG,Q,EAGtB,IAAIxD,EAAa,KAEjB,MAAMyC,EAAe,CACnBgB,UAAU,EACVC,YAAa,OACbC,aAAc,MACdC,gBAAiB,SACjBC,aAAc","sources":["src/infinityscroll.js"],"sourcesContent":["import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nconst API_URL =\n  'https://pixabay.com/api/?image_type=photo&orientation=horizontal&safesearch=true&';\nconst API_KEY = 'key=38382365-2ce894cbac0e5297650bdbdb4';\nconst refs = {\n  form: document.querySelector('#search-form'),\n  gallery: document.querySelector('.gallery'),\n  guard: document.querySelector('.js-guard'),\n};\n\nrefs.form.addEventListener('submit', onSearch);\nrefs.gallery.addEventListener('click', onImgClick);\n\nlet counter = 1;\nlet totalPageCounter = 40;\nlet searchQuery = '';\nlet showFindAndScroll = 1;\n\nfunction onSearch(e) {\n  e.preventDefault();\n  showFindAndScroll = 1;\n  counter = 1;\n  refs.gallery.innerHTML = '';\n  searchQuery = e.currentTarget.elements.searchQuery.value.trim();\n  getImg(searchQuery);\n}\n\nconst optionsScroll = {\n  root: null,\n  rootMargin: '500px',\n  threshold: 0,\n};\nconst observer = new IntersectionObserver(onPagination, optionsScroll);\n\nfunction onPagination(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      onLoadMore();\n\n      if (totalPageCounter > 500) {\n        observer.unobserve(entry.target);\n      }\n    }\n  });\n}\n\nfunction onLoadMore() {\n  counter += 1;\n  totalPageCounter += 40;\n  if (totalPageCounter > 500) {\n    Notify.failure(\n      \"We're sorry, but you've reached the end of search results.\"\n    );\n    return;\n  }\n\n  getImg(searchQuery);\n}\n\nasync function getImg(query) {\n  try {\n    const data = await axios.get(\n      `${API_URL}${API_KEY}&q=${query}&per_page=40&page=${counter}`\n    );\n    if (data.status !== 200) {\n      throw new Error(data.status);\n    }\n    if (data.data.hits.length === 0) {\n      Notify.failure('enter a valid value to search for');\n      return;\n    }\n\n    galleryMarkup(data);\n    if (showFindAndScroll) {\n      Notify.success(`Hooray! We found ${data.data.totalHits} images.`);\n      showFindAndScroll -= 1;\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\nlet imgGallery = null;\n\nconst optionSimple = {\n  captions: true,\n  captionType: 'attr',\n  captionsData: 'alt',\n  captionPosition: 'bottom',\n  captionDelay: 250,\n};\n\nfunction galleryMarkup(imgData) {\n  const markup = imgData.data.hits\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      } = {}) => {\n        return `<div class=\"photo-card\">\n        <a class=\"img-link\" href=\"${largeImageURL}\">\n        <img width=\"320\" class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\"/>\n        </a>\n        <div class=\"info\">\n        <p class=\"info-item\"><b>Likes</b>${likes}</p>\n        <p class=\"info-item\"><b>Views</b>${views}</p>\n        <p class=\"info-item\"><b>Comments</b>${comments}</p>\n        <p class=\"info-item\"><b>Downloads</b>${downloads}</p>\n        </div>\n        </div>`;\n      }\n    )\n    .join('');\n  refs.gallery.insertAdjacentHTML('beforeend', markup);\n  observer.observe(refs.guard);\n  imgGallery = new SimpleLightbox(\n    '.gallery .photo-card .img-link',\n    optionSimple\n  );\n\n  const { height: cardHeight } =\n    refs.gallery.firstElementChild.getBoundingClientRect();\n  if (!showFindAndScroll) {\n    window.scrollBy({\n      top: cardHeight * 2,\n      behavior: 'smooth',\n    });\n  }\n}\n\nfunction onImgClick(e) {\n  e.preventDefault();\n  if (e.target.classList.contains('gallery-image')) {\n    imgGallery.on('show .simplelightbox');\n  }\n}\n"],"names":["$2shzp","parcelRequire","$4677b00d05925fd6$var$refs","form","document","querySelector","gallery","guard","addEventListener","e","preventDefault","$4677b00d05925fd6$var$showFindAndScroll","$4677b00d05925fd6$var$counter","innerHTML","$4677b00d05925fd6$var$searchQuery","currentTarget","elements","searchQuery","value","trim","$4677b00d05925fd6$var$getImg","target","classList","contains","$4677b00d05925fd6$var$imgGallery","on","$4677b00d05925fd6$var$totalPageCounter","$4677b00d05925fd6$var$observer","IntersectionObserver","entries","forEach","entry","isIntersecting","$iQIUW","Notify","failure","$4677b00d05925fd6$var$onLoadMore","unobserve","root","rootMargin","threshold","async","query","data","default","get","status","Error","hits","length","imgData","markup","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","observe","$parcel$interopDefault","$fZKcF","$4677b00d05925fd6$var$optionSimple","height","cardHeight","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","$4677b00d05925fd6$var$galleryMarkup","success","totalHits","error","console","log","message","captions","captionType","captionsData","captionPosition","captionDelay"],"version":3,"file":"infinityscroll.37b75b09.js.map"}