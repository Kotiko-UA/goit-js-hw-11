{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,oDAIMC,EACJ,oFACIC,EAAU,yCACVC,EAAO,CACXC,KAAMC,SAASC,cAAc,gBAC7BC,QAASF,SAASC,cAAc,YAChCE,MAAOH,SAASC,cAAc,cAO1BG,EAAW,IAAIC,sBAoBrB,SAAsBC,GACpBA,EAAQC,SAAQ,SAAAC,GACVA,EAAMC,gBACRC,EAAOC,E,MA5BS,CACpBC,KAAM,KACNC,WAAY,SACZC,UAAW,IAGbhB,EAAKC,KAAKgB,iBAAiB,UAQ3B,SAAkBC,GAChBA,EAAEC,iBACFb,EAASc,UAAUpB,EAAKK,OACxBgB,EAAU,EACVC,EAAmB,EACnBC,GAAoB,EACpBvB,EAAKI,QAAQoB,UAAY,GAEzBZ,EADAC,EAAcK,EAAEO,cAAcC,SAASC,YAAYC,MAAMC,O,IAd3D7B,EAAKI,QAAQa,iBAAiB,SAwG9B,SAAoBC,GAClBA,EAAEC,iBACED,EAAEY,OAAOC,UAAUC,SAAS,kBAC9BC,EAAWC,GAAG,uB,IAzGlB,IAAIb,EAAU,EACVC,EAAmB,EACnBT,EAAc,GACdU,GAAoB,E,SAqBTX,EAAOuB,G,OAAPC,EAAMC,MAAAC,KAAAC,U,UAANH,I,OAAAA,EAAfI,EAAA5C,EAAA,CAAA4C,EAAAC,GAAAC,MAAA,SAAAC,EAAsBR,G,IAIZS,E,yEAHRvB,GAAW,EACXC,GAAoB,G,kBAECuB,EAAAC,QAAMC,IACvB,GAAaC,OAAVlD,GAAuBkD,OAAbjD,EAAQ,OAA+BiD,OAA1Bb,EAAM,sBAA4Ba,OAAR3B,I,UAElC,OAHduB,EAAIK,EAAAC,MAGDC,OAAc,C,eACrB,MAAM,IAAIC,MAAMR,EAAKO,Q,UAEO,IAA1BP,EAAKA,KAAKS,KAAKC,OAAY,C,uBAC7BC,EAAAC,OAAOC,QACL,4E,8BAKJC,EAAcd,GACVrB,IACFgC,EAAAC,OAAOG,QAAQ,oBAAwCX,OAApBJ,EAAKA,KAAKgB,UAAU,aACvDrC,GAAoB,KAGlBD,EAAmBsB,EAAKA,KAAKgB,WAAS,C,uBACxCL,EAAAC,OAAOC,QACL,8DAEFnD,EAASc,UAAUpB,EAAKK,O,6EAI1BwD,QAAQC,IAAIb,EAAAc,GAAMC,S,2DA/BD3B,MAAAC,KAAAC,U,CAmCrB,IAOIN,EAAa,IAAIO,EAAAyB,GAAJ,CACf,iCARmB,CACnBC,UAAU,EACVC,YAAa,OACbC,aAAc,MACdC,gBAAiB,SACjBC,aAAc,MAOhB,SAASZ,EAAca,GACrB,IAAMC,EAASD,EAAQ3B,KAAKS,KACzBoB,KACC,W,6DAQI,GAPFC,EAAYC,EAAZD,aACAE,EAAaD,EAAbC,cACAC,EAAIF,EAAJE,KACAC,EAAKH,EAALG,MACAC,EAAKJ,EAALI,MACAC,EAAQL,EAARK,SACAC,EAASN,EAATM,UAEA,MAAO,+DAEuCjC,OADlB4B,EAAc,4DAC0B5B,OAAtB0B,EAAa,WAGxB1B,OAHiC6B,EAAK,2GAItC7B,OADA8B,EAAM,mDAEH9B,OADH+B,EAAM,sDAEF/B,OADDgC,EAAS,uDACEhC,OAAViC,EAAU,uC,IAKpDC,KAAK,IACRlF,EAAKI,QAAQ+E,mBAAmB,YAAaX,GAC7CvC,EAAWmD,UACX9E,EAAS+E,QAAQrF,EAAKK,M","sources":["src/infinityscroll.js"],"sourcesContent":["import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nconst API_URL =\n  'https://pixabay.com/api/?image_type=photo&orientation=horizontal&safesearch=true&';\nconst API_KEY = 'key=38382365-2ce894cbac0e5297650bdbdb4';\nconst refs = {\n  form: document.querySelector('#search-form'),\n  gallery: document.querySelector('.gallery'),\n  guard: document.querySelector('.js-guard'),\n};\nconst optionsScroll = {\n  root: null,\n  rootMargin: '1000px',\n  threshold: 0,\n};\nconst observer = new IntersectionObserver(onPagination, optionsScroll);\nrefs.form.addEventListener('submit', onSearch);\nrefs.gallery.addEventListener('click', onImgClick);\n\nlet counter = 0;\nlet totalPageCounter = 0;\nlet searchQuery = '';\nlet showFindAndScroll = true;\n\nfunction onSearch(e) {\n  e.preventDefault();\n  observer.unobserve(refs.guard);\n  counter = 0;\n  totalPageCounter = 0;\n  showFindAndScroll = true;\n  refs.gallery.innerHTML = '';\n  searchQuery = e.currentTarget.elements.searchQuery.value.trim();\n  getImg(searchQuery);\n}\n\nfunction onPagination(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      getImg(searchQuery);\n    }\n  });\n}\n\nasync function getImg(query) {\n  counter += 1;\n  totalPageCounter += 40;\n  try {\n    const data = await axios.get(\n      `${API_URL}${API_KEY}&q=${query}&per_page=40&page=${counter}`\n    );\n    if (data.status !== 200) {\n      throw new Error(data.status);\n    }\n    if (data.data.hits.length === 0) {\n      Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      return;\n    }\n\n    galleryMarkup(data);\n    if (showFindAndScroll) {\n      Notify.success(`Hooray! We found ${data.data.totalHits} images.`);\n      showFindAndScroll = false;\n    }\n\n    if (totalPageCounter > data.data.totalHits) {\n      Notify.failure(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n      observer.unobserve(refs.guard);\n      return;\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nconst optionSimple = {\n  captions: true,\n  captionType: 'attr',\n  captionsData: 'alt',\n  captionPosition: 'bottom',\n  captionDelay: 250,\n};\nlet imgGallery = new SimpleLightbox(\n  '.gallery .photo-card .img-link',\n  optionSimple\n);\n\nfunction galleryMarkup(imgData) {\n  const markup = imgData.data.hits\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      } = {}) => {\n        return `<div class=\"photo-card\">\n        <a class=\"img-link\" href=\"${largeImageURL}\">\n        <img width=\"320\" class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\"/>\n        </a>\n        <div class=\"info\">\n        <p class=\"info-item\"><b>Likes</b>${likes}</p>\n        <p class=\"info-item\"><b>Views</b>${views}</p>\n        <p class=\"info-item\"><b>Comments</b>${comments}</p>\n        <p class=\"info-item\"><b>Downloads</b>${downloads}</p>\n        </div>\n        </div>`;\n      }\n    )\n    .join('');\n  refs.gallery.insertAdjacentHTML('beforeend', markup);\n  imgGallery.refresh();\n  observer.observe(refs.guard);\n}\n\nfunction onImgClick(e) {\n  e.preventDefault();\n  if (e.target.classList.contains('gallery-image')) {\n    imgGallery.on('show .simplelightbox');\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$97db1b2f146c86e3$var$API_URL","$97db1b2f146c86e3$var$API_KEY","$97db1b2f146c86e3$var$refs","form","document","querySelector","gallery","guard","$97db1b2f146c86e3$var$observer","IntersectionObserver","entries","forEach","entry","isIntersecting","$97db1b2f146c86e3$var$getImg","$97db1b2f146c86e3$var$searchQuery","root","rootMargin","threshold","addEventListener","e","preventDefault","unobserve","$97db1b2f146c86e3$var$counter","$97db1b2f146c86e3$var$totalPageCounter","$97db1b2f146c86e3$var$showFindAndScroll","innerHTML","currentTarget","elements","searchQuery","value","trim","target","classList","contains","$97db1b2f146c86e3$var$imgGallery","on","query","$97db1b2f146c86e3$var$_getImg","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","data","$dIxxU","default","get","concat","_ctx","sent","status","Error","hits","length","$h6c0i","Notify","failure","$97db1b2f146c86e3$var$galleryMarkup","success","totalHits","console","log","t0","message","$5IjG7","captions","captionType","captionsData","captionPosition","captionDelay","imgData","markup","map","webformatURL","ref","largeImageURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","refresh","observe"],"version":3,"file":"infinityscroll.59d50b30.js.map"}