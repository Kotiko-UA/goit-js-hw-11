{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,oDAIMC,EACJ,oFACIC,EAAU,yCACVC,EAAO,CACXC,KAAMC,SAASC,cAAc,gBAC7BC,QAASF,SAASC,cAAc,YAChCE,MAAOH,SAASC,cAAc,cAO1BG,EAAW,IAAIC,sBAmBrB,SAAsBC,GACpBA,EAAQC,SAAQ,SAAAC,GACVA,EAAMC,kBAUd,WAGE,GAFAC,GAAW,GACXC,GAAoB,IACG,IAIrB,YAHAC,EAAAC,OAAOC,QACL,8DAKJC,EAAOC,E,CAnBHC,GAEIN,EAAmB,KACrBP,EAASc,UAAUV,EAAMW,Q,MA9BX,CACpBC,KAAM,KACNC,WAAY,SACZC,UAAW,IAGbxB,EAAKC,KAAKwB,iBAAiB,UAQ3B,SAAkBC,GAChBA,EAAEC,iBACFrB,EAASc,UAAUpB,EAAKK,OACxBuB,GAAoB,EACpBhB,EAAU,EACVZ,EAAKI,QAAQyB,UAAY,GAEzBZ,EADAC,EAAcQ,EAAEI,cAAcC,SAASC,YAAYC,MAAMC,O,IAb3DlC,EAAKI,QAAQqB,iBAAiB,SA4G9B,SAAoBC,GAClBA,EAAEC,iBACED,EAAEL,OAAOc,UAAUC,SAAS,kBAC9BC,EAAWC,GAAG,uB,IA7GlB,IAAI1B,EAAU,EACVC,EAAmB,GACnBK,EAAc,GACdU,GAAoB,E,SAqCTX,EAAOsB,G,OAAPC,EAAMC,MAAAC,KAAAC,U,UAANH,I,OAAAA,EAAfI,EAAAhD,EAAA,CAAAgD,EAAAC,GAAAC,MAAA,SAAAC,EAAsBR,G,IAEZS,E,2FAAaC,EAAAC,QAAMC,IACvB,GAAaC,OAAVtD,GAAuBsD,OAAbrD,EAAQ,OAA+BqD,OAA1Bb,EAAM,sBAA4Ba,OAARxC,I,UAElC,OAHdoC,EAAIK,EAAAC,MAGDC,OAAc,C,eACrB,MAAM,IAAIC,MAAMR,EAAKO,Q,UAEO,IAA1BP,EAAKA,KAAKS,KAAKC,OAAY,C,sBAC7B5C,EAAAC,OAAOC,QAAQ,qC,0BAIjB2C,EAAcX,GACVpB,IACFd,EAAAC,OAAO6C,QAAQ,oBAAwCR,OAApBJ,EAAKA,KAAKa,UAAU,aACvDjC,GAAoB,G,kDAGtBkC,QAAQC,IAAIV,EAAAW,GAAMC,S,2DAnBDxB,MAAAC,KAAAC,U,CAuBrB,IAOIN,EAAa,IAAIO,EAAAsB,GAAJ,CACf,iCARmB,CACnBC,UAAU,EACVC,YAAa,OACbC,aAAc,MACdC,gBAAiB,SACjBC,aAAc,MAOhB,SAASZ,EAAca,GACrB,IAAMC,EAASD,EAAQxB,KAAKS,KACzBiB,KACC,W,6DAQI,GAPFC,EAAYC,EAAZD,aACAE,EAAaD,EAAbC,cACAC,EAAIF,EAAJE,KACAC,EAAKH,EAALG,MACAC,EAAKJ,EAALI,MACAC,EAAQL,EAARK,SACAC,EAASN,EAATM,UAEA,MAAO,+DAEuC9B,OADlByB,EAAc,4DAC0BzB,OAAtBuB,EAAa,WAGxBvB,OAHiC0B,EAAK,2GAItC1B,OADA2B,EAAM,mDAEH3B,OADH4B,EAAM,sDAEF5B,OADD6B,EAAS,uDACE7B,OAAV8B,EAAU,uC,IAKpDC,KAAK,IACRnF,EAAKI,QAAQgF,mBAAmB,YAAaX,GAC7CpC,EAAWgD,UACX/E,EAASgF,QAAQtF,EAAKK,M","sources":["src/infinityscroll.js"],"sourcesContent":["import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nconst API_URL =\n  'https://pixabay.com/api/?image_type=photo&orientation=horizontal&safesearch=true&';\nconst API_KEY = 'key=38382365-2ce894cbac0e5297650bdbdb4';\nconst refs = {\n  form: document.querySelector('#search-form'),\n  gallery: document.querySelector('.gallery'),\n  guard: document.querySelector('.js-guard'),\n};\nconst optionsScroll = {\n  root: null,\n  rootMargin: '1000px',\n  threshold: 0,\n};\nconst observer = new IntersectionObserver(onPagination, optionsScroll);\nrefs.form.addEventListener('submit', onSearch);\nrefs.gallery.addEventListener('click', onImgClick);\n\nlet counter = 1;\nlet totalPageCounter = 40;\nlet searchQuery = '';\nlet showFindAndScroll = true;\n\nfunction onSearch(e) {\n  e.preventDefault();\n  observer.unobserve(refs.guard);\n  showFindAndScroll = true;\n  counter = 1;\n  refs.gallery.innerHTML = '';\n  searchQuery = e.currentTarget.elements.searchQuery.value.trim();\n  getImg(searchQuery);\n}\n\nfunction onPagination(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      onLoadMore();\n\n      if (totalPageCounter > 500) {\n        observer.unobserve(entry.target);\n      }\n    }\n  });\n}\n\nfunction onLoadMore() {\n  counter += 1;\n  totalPageCounter += 40;\n  if (totalPageCounter > 500) {\n    Notify.failure(\n      \"We're sorry, but you've reached the end of search results.\"\n    );\n    return;\n  }\n\n  getImg(searchQuery);\n}\n\nasync function getImg(query) {\n  try {\n    const data = await axios.get(\n      `${API_URL}${API_KEY}&q=${query}&per_page=40&page=${counter}`\n    );\n    if (data.status !== 200) {\n      throw new Error(data.status);\n    }\n    if (data.data.hits.length === 0) {\n      Notify.failure('enter a valid value to search for');\n      return;\n    }\n\n    galleryMarkup(data);\n    if (showFindAndScroll) {\n      Notify.success(`Hooray! We found ${data.data.totalHits} images.`);\n      showFindAndScroll = false;\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nconst optionSimple = {\n  captions: true,\n  captionType: 'attr',\n  captionsData: 'alt',\n  captionPosition: 'bottom',\n  captionDelay: 250,\n};\nlet imgGallery = new SimpleLightbox(\n  '.gallery .photo-card .img-link',\n  optionSimple\n);\n\nfunction galleryMarkup(imgData) {\n  const markup = imgData.data.hits\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      } = {}) => {\n        return `<div class=\"photo-card\">\n        <a class=\"img-link\" href=\"${largeImageURL}\">\n        <img width=\"320\" class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\"/>\n        </a>\n        <div class=\"info\">\n        <p class=\"info-item\"><b>Likes</b>${likes}</p>\n        <p class=\"info-item\"><b>Views</b>${views}</p>\n        <p class=\"info-item\"><b>Comments</b>${comments}</p>\n        <p class=\"info-item\"><b>Downloads</b>${downloads}</p>\n        </div>\n        </div>`;\n      }\n    )\n    .join('');\n  refs.gallery.insertAdjacentHTML('beforeend', markup);\n  imgGallery.refresh();\n  observer.observe(refs.guard);\n}\n\nfunction onImgClick(e) {\n  e.preventDefault();\n  if (e.target.classList.contains('gallery-image')) {\n    imgGallery.on('show .simplelightbox');\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$97db1b2f146c86e3$var$API_URL","$97db1b2f146c86e3$var$API_KEY","$97db1b2f146c86e3$var$refs","form","document","querySelector","gallery","guard","$97db1b2f146c86e3$var$observer","IntersectionObserver","entries","forEach","entry","isIntersecting","$97db1b2f146c86e3$var$counter","$97db1b2f146c86e3$var$totalPageCounter","$h6c0i","Notify","failure","$97db1b2f146c86e3$var$getImg","$97db1b2f146c86e3$var$searchQuery","$97db1b2f146c86e3$var$onLoadMore","unobserve","target","root","rootMargin","threshold","addEventListener","e","preventDefault","$97db1b2f146c86e3$var$showFindAndScroll","innerHTML","currentTarget","elements","searchQuery","value","trim","classList","contains","$97db1b2f146c86e3$var$imgGallery","on","query","$97db1b2f146c86e3$var$_getImg","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","data","$dIxxU","default","get","concat","_ctx","sent","status","Error","hits","length","$97db1b2f146c86e3$var$galleryMarkup","success","totalHits","console","log","t0","message","$5IjG7","captions","captionType","captionsData","captionPosition","captionDelay","imgData","markup","map","webformatURL","ref","largeImageURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","refresh","observe"],"version":3,"file":"infinityscroll.260b3dc0.js.map"}